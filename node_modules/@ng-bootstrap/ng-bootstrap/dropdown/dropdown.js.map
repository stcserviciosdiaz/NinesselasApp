{"version":3,"file":"dropdown.js","sourceRoot":"","sources":["../../src/dropdown/dropdown.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  forwardRef,\n  Inject,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  ContentChild,\n  NgZone,\n  Renderer2,\n  OnInit,\n  OnDestroy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, race, Subject, Subscription} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\nimport {NgbDropdownConfig} from './dropdown-config';\nimport {positionElements, PlacementArray, Placement} from '../util/positioning';\nimport {Key} from '../util/key';\n\n/**\n */\n@Directive({\n  selector: '[ngbDropdownMenu]',\n  host: {'[class.dropdown-menu]': 'true', '[class.show]': 'dropdown.isOpen()', '[attr.x-placement]': 'placement'}\n})\nexport class NgbDropdownMenu {\n  placement: Placement = 'bottom';\n  isOpen = false;\n\n  constructor(\n      @Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>,\n      private _renderer: Renderer2) {}\n\n  isEventFrom($event) { return this._elementRef.nativeElement.contains($event.target); }\n\n  position(triggerEl, placement) {\n    this.applyPlacement(positionElements(triggerEl, this._elementRef.nativeElement, placement));\n  }\n\n  applyPlacement(_placement: Placement) {\n    // remove the current placement classes\n    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropup');\n    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n    this.placement = _placement;\n    /**\n     * apply the new placement\n     * in case of top use up-arrow or down-arrow otherwise\n     */\n    if (_placement.search('^top') !== -1) {\n      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropup');\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n    }\n  }\n}\n\n/**\n * Marks an element to which dropdown menu will be anchored. This is a simple version\n * of the NgbDropdownToggle directive. It plays the same role as NgbDropdownToggle but\n * doesn't listen to click events to toggle dropdown menu thus enabling support for\n * events other than click.\n *\n * @since 1.1.0\n */\n@Directive({\n  selector: '[ngbDropdownAnchor]',\n  host: {'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()'}\n})\nexport class NgbDropdownAnchor {\n  anchorEl;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>) {\n    this.anchorEl = _elementRef.nativeElement;\n  }\n\n  isEventFrom($event) { return this._elementRef.nativeElement.contains($event.target); }\n}\n\n/**\n * Allows the dropdown to be toggled via click. This directive is optional: you can use NgbDropdownAnchor as an\n * alternative.\n */\n@Directive({\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'toggleOpen()'\n  },\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n\n  toggleOpen() { this.dropdown.toggle(); }\n}\n\n/**\n * Transforms a node into a dropdown.\n */\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\nexport class NgbDropdown implements OnInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _zoneSubscription: Subscription;\n\n  @ContentChild(NgbDropdownMenu) private _menu: NgbDropdownMenu;\n\n  @ContentChild(NgbDropdownAnchor) private _anchor: NgbDropdownAnchor;\n\n  /**\n   * Indicates that dropdown should be closed when selecting one of dropdown items (click) or pressing ESC.\n   * When it is true (default) dropdowns are automatically closed on both outside and inside (menu) clicks.\n   * When it is false dropdowns are never automatically closed.\n   * When it is 'outside' dropdowns are automatically closed on outside clicks but not on menu clicks.\n   * When it is 'inside' dropdowns are automatically on menu clicks but not on outside clicks.\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside';\n\n  /**\n   *  Defines whether or not the dropdown-menu is open initially.\n   */\n  @Input('open') _open = false;\n\n  /**\n   * Placement of a popover accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   *  An event fired when the dropdown is opened or closed.\n   *  Event's payload equals whether dropdown is open.\n   */\n  @Output() openChange = new EventEmitter();\n\n  constructor(\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone) {\n    this.placement = config.placement;\n    this.autoClose = config.autoClose;\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n  }\n\n  ngOnInit() {\n    if (this._menu) {\n      this._menu.applyPlacement(Array.isArray(this.placement) ? (this.placement[0]) : this.placement as Placement);\n    }\n\n    if (this._open) {\n      this._setCloseHandlers();\n    }\n  }\n\n  /**\n   * Checks if the dropdown menu is open or not.\n   */\n  isOpen(): boolean { return this._open; }\n\n  /**\n   * Opens the dropdown menu of a given navbar or tabbed navigation.\n   */\n  open(): void {\n    if (!this._open) {\n      this._open = true;\n      this._positionMenu();\n      this.openChange.emit(true);\n      this._setCloseHandlers();\n    }\n  }\n\n  private _setCloseHandlers() {\n    if (this.autoClose) {\n      this._ngZone.runOutsideAngular(() => {\n        const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                             .pipe(takeUntil(this._closed$), filter(event => event.which === Key.Escape));\n\n        const clicks$ = fromEvent<MouseEvent>(this._document, 'click')\n                            .pipe(takeUntil(this._closed$), filter(event => this._shouldCloseFromClick(event)));\n\n        race<Event>([escapes$, clicks$]).pipe(takeUntil(this._closed$)).subscribe(() => this._ngZone.run(() => {\n          this.close();\n          this._changeDetector.markForCheck();\n        }));\n      });\n    }\n  }\n\n  /**\n   * Closes the dropdown menu of a given navbar or tabbed navigation.\n   */\n  close(): void {\n    if (this._open) {\n      this._open = false;\n      this._closed$.next();\n      this.openChange.emit(false);\n    }\n  }\n\n  /**\n   * Toggles the dropdown menu of a given navbar or tabbed navigation.\n   */\n  toggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  private _shouldCloseFromClick(event: MouseEvent) {\n    if (event.button !== 2 && !this._isEventFromToggle(event)) {\n      if (this.autoClose === true) {\n        return true;\n      } else if (this.autoClose === 'inside' && this._isEventFromMenu(event)) {\n        return true;\n      } else if (this.autoClose === 'outside' && !this._isEventFromMenu(event)) {\n        return true\n      }\n    }\n    return false;\n  }\n\n  ngOnDestroy() {\n    this._closed$.next();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _isEventFromToggle($event) { return this._anchor.isEventFrom($event); }\n\n  private _isEventFromMenu($event) { return this._menu ? this._menu.isEventFrom($event) : false; }\n\n  private _positionMenu() {\n    if (this.isOpen() && this._menu) {\n      this._menu.position(this._anchor.anchorEl, this.placement);\n    }\n  }\n}\n"]}